% Generated by MATLAB(R) 9.12 (R2022a) and LTE Toolbox 3.7 (R2022a).
% Generated on: 27-Jun-2022 15:07:45
clear all;
type = 'Downlink RMC';

T = readtable('excel.csv');
C = table2cell(T);

cfgArrayDefault = {'R.0', 'FDD', 0, 10, 1, 0, 1, 'Off', 'Off', 'Port0', 1, 0, [0 1 2 3], 8, 1};
cfgArray = C(1,:); %this is only one, but if we add more rows we can iterate including every step below in a for loop
%note: in this case we need to specify the filename according to our setup
%and iteration so we dont overwrite already simulated data
for r = 1:15
    if strcmp(cfgArray(r), 'DEFAULT')
        cfgArray(r) = cfgArrayDefault(r);
    end
end


%% USER INPUT
cfg = struct('RC', cfgArray{1}, ...
    'DuplexMode', cfgArray{2}, ...
    'NCellID', cfgArray{3}, ...
    'TotSubframes', cfgArray{4}, ...
    'NumCodewords', cfgArray{5}, ...
    'Windowing', cfgArray{6}, ...
    'AntennaPort', cfgArray{7});

cfg.OCNGPDSCHEnable = cfgArray{8};
cfg.OCNGPDCCHEnable = cfgArray{9};
cfg.PDSCH.TxScheme = cfgArray{10};
cfg.PDSCH.RNTI = cfgArray{11};
cfg.PDSCH.Rho = cfgArray{12};
cfg.PDSCH.RVSeq = [0 1 2 3];
cfg.PDSCH.NHARQProcesses = cfgArray{14};
cfg.PDSCH.PMISet = cfgArray{15};
cfg = lteRMCDL(cfg);


%% Generating Downlink RMC waveform
% input bit source:
in = [1; 0; 0; 1];
[waveform,grid,config] = lteRMCDLTool(cfg, in);
Fs = config.SamplingRate; 								 % Specify the sample rate of the waveform in Hz


%% Impairments

% AWGN
if not(strcmp(cfgArray{16}, 'NONE'))
    SNR = cfgArray{16}; 
    waveform = awgn(waveform, SNR, 'measured');
end

% Frequency offset
if not(strcmp(cfgArray{17}, 'NONE'))
    freq_offset_impair = cfgArray{17}; %u need to change this one
    freqOff = comm.PhaseFrequencyOffset('FrequencyOffset', freq_offset_impair, ...
    'SampleRate', 		Fs);
    waveform = freqOff(waveform);
end

% Phase offset
if not(strcmp(cfgArray{18}, 'NONE'))
    newChr = strrep(cfgArray(18),'pi','3.1415926');
    phase_off = eval(newChr{:});
    waveform = waveform * exp(1i*phase_off); %u need to change this one
end


%% Visualize
% Spectrum Analyzer
spectrum = dsp.SpectrumAnalyzer('SampleRate', Fs);
spectrum(waveform);
release(spectrum);
waveStruct = struct('type', type, 'config', config, 'Fs', Fs, 'waveform', waveform, 'grid', grid);
filename = strcat(cfgArray{1} , '_' , cfgArray{2} , '_' , num2str(cfgArray{16}) , 'SNR', '.mat');
save(filename, 'type', 'config', 'Fs', 'waveform', 'grid');
